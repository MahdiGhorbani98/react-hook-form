{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","useForm","register","control","handleSubmit","errors","formState","useStyle","makeStyles","theme","form","margin","display","flexDirection","alignItems","textField","marginBottom","width","maxWidth","btn","padding","formControl","error","createTheme","palette","type","background","default","classes","ThemeProvider","CssBaseline","onSubmit","data","alert","JSON","stringify","className","TextField","color","variant","label","required","pattern","value","message","firstName","Typography","maxLength","lastName","name","defaultValue","render","field","FormControl","InputLabel","htmlFor","Select","map","option","index","MenuItem","position","min","max","age","phoneNumber","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.62f02a3a.chunk.js","sourcesContent":["import { Button, MenuItem,InputLabel, FormControl, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport {useForm ,Controller} from 'react-hook-form'\nimport { makeStyles, ThemeProvider,createTheme } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport '../css/App.css'\nfunction App() {\n\n  const {register , control , handleSubmit , formState:{errors}} = useForm();\n  const onSubmit = data => alert(JSON.stringify(data))\n  const useStyle = makeStyles((theme)=> ({\n\n    form :{\n\n      margin: \"30px 10px\",\n      display : 'flex',\n      flexDirection: 'column',\n      alignItems:'center'\n    },\n    textField:{\n      marginBottom : 15,\n      width : \"90%\" ,\n      maxWidth : \"400px\"\n    },\n    btn:{\n      marginBottom : 15,\n      width : \"90%\" ,\n      maxWidth : \"400px\",\n      padding:\"15px 0\"\n    },\n    formControl: {\n      marginBottom : 20,\n      width : \"90%\" ,\n      maxWidth : \"400px\"\n    },\n    error:{\n      display:\"flex\",\n      marginBottom :25\n    }\n  }))\n  const theme =(\n    createTheme({\n      palette: {\n        type:  'dark' ,\n        background: {\n          default: \"#0e172c\"\n        }\n      },\n    })\n  )\n  \n  const classes = useStyle();\n  \n  return (\n    <ThemeProvider theme={theme} >\n      <CssBaseline/>\n      <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n        \n        <TextField color=\"secondary\"  className={classes.textField} variant=\"outlined\" label=\"First Name\" \n        {...register (\"firstName\" , {required : \"This field is required\" , pattern:{value:/^[A-Za-z]+$/i , message :\"Alphabetical characters only\"} })}\n        />\n        {errors.firstName && <div className={classes.error}><ErrorOutlineOutlinedIcon color=\"secondary\"/> <Typography color=\"secondary\">{errors.firstName.message}</Typography></div>}\n\n        <TextField color=\"secondary\" className={classes.textField} variant=\"outlined\" label=\"Last Name\" \n        {...register (\"lastName\" ,{required :\"This field is required\" ,  maxLength:{value:15 , message :\"You exceeded the max length\"} })} />\n        {errors.lastName && <div className={classes.error}><ErrorOutlineOutlinedIcon color=\"secondary\"/> <Typography color=\"secondary\">{errors.lastName.message}</Typography></div>}\n\n        <Controller\n \n            name={\"position\"}\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel color=\"secondary\"  htmlFor=\"pos\">Your Position</InputLabel>\n              <Select {...register (\"position\" ,{required :\"This field is required\"})} color=\"secondary\" variant =\"outlined\" label=\"Your Position\" {...field}>\n                {[\"Frontend_Dev\" , \"Backend_Dev\",\"FullStack_Dev\"].map((option, index) => (\n                <MenuItem key={index} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n              </Select>\n              </FormControl>\n            )}\n        />\n\n        {errors.position && <div className={classes.error}><ErrorOutlineOutlinedIcon color=\"secondary\"/> <Typography color=\"secondary\">{errors.position.message}</Typography></div>}\n\n        <TextField color=\"secondary\" className={classes.textField} variant=\"outlined\" label=\"Age\" \n        {...register (\"age\" ,{required :\"This field is required\" ,min:{value:15 ,message :\"You must be between 15 and 99 years old\"} , max:{value:99 , message :\"You must be between 15 and 99 years old\"} })} />\n        {errors.age && <div className={classes.error}><ErrorOutlineOutlinedIcon color=\"secondary\"/> <Typography color=\"secondary\">{errors.age.message}</Typography></div>}\n\n        <TextField color=\"secondary\" className={classes.textField} variant=\"outlined\" label=\"Phone Number\" \n        {...register (\"phoneNumber\",{pattern:{value:/^09\\d{9}$/ , message : \"Your phone number is not valid\"}}  )} />\n        {errors.phoneNumber && <div className={classes.error}><ErrorOutlineOutlinedIcon color=\"secondary\"/> <Typography color=\"secondary\">{errors.phoneNumber.message}</Typography></div>}\n\n\n\n\n\n\n\n\n        \n        <Button className={classes.btn}  variant=\"contained\" color=\"secondary\" type=\"submit\">Submit</Button>\n      </form>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}